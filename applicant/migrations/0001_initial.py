# Generated by Django 5.0.3 on 2024-04-10 11:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AddressDistrict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(max_length=255, verbose_name='Район')),
            ],
            options={
                'verbose_name': 'Адрес (район)',
                'verbose_name_plural': 'Адрес (районы)',
                'ordering': ('district',),
            },
        ),
        migrations.CreateModel(
            name='AddressRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=255, verbose_name='Область')),
            ],
            options={
                'verbose_name': 'Адрес (область)',
                'verbose_name_plural': 'Адрес (области)',
                'ordering': ('region',),
            },
        ),
        migrations.CreateModel(
            name='CompleteFrom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complete_from', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Комплектующий орган',
                'verbose_name_plural': 'Комплектующие органы',
                'ordering': ('complete_from',),
            },
        ),
        migrations.CreateModel(
            name='ForeignLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foreign_language', models.CharField(max_length=100, verbose_name='Предмет')),
            ],
            options={
                'verbose_name': 'Иностранный язык для изучения',
                'verbose_name_plural': 'Иностранные языки для изучения',
                'ordering': ('foreign_language',),
            },
        ),
        migrations.CreateModel(
            name='LanguageMath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=100, verbose_name='Язык для математики')),
            ],
            options={
                'verbose_name': 'Язык',
                'verbose_name_plural': 'Языки',
                'ordering': ('language',),
            },
        ),
        migrations.CreateModel(
            name='Privilege',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privilege', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Льгота',
                'verbose_name_plural': 'Льготы',
                'ordering': ('privilege',),
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100, verbose_name='Предмет')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
                'ordering': ('subject',),
            },
        ),
        migrations.CreateModel(
            name='VVK',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vvk_result', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'ВВК результат',
                'verbose_name_plural': 'ВВК результаты',
                'ordering': ('vvk_result',),
            },
        ),
        migrations.CreateModel(
            name='AddressCity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=255, verbose_name='Город')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applicant.addressdistrict')),
            ],
            options={
                'verbose_name': 'Адрес (город)',
                'verbose_name_plural': 'Адрес (город)',
                'ordering': ('city',),
            },
        ),
        migrations.AddField(
            model_name='addressdistrict',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applicant.addressregion'),
        ),
        migrations.CreateModel(
            name='ApplicantPersonalFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=200, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=200, verbose_name='Имя')),
                ('patronymic', models.CharField(blank=True, max_length=200, null=True, verbose_name='Отчество')),
                ('date_of_birth', models.DateField(verbose_name='Дата рождения')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Домашний адрес (Улица, Номер дома, Номер квартиры)')),
                ('contact_number', models.TextField(verbose_name='Контактные данные законных представителей')),
                ('average_mark', models.FloatField(blank=True, null=True, verbose_name='Средний бал свидетельства об общем базовом образовании')),
                ('average_mark_year', models.FloatField(blank=True, null=True, verbose_name='Средний бал ведомости годовых отметок')),
                ('class_he_goes_to', models.IntegerField(choices=[(7, '7 класс'), (8, '8 класс'), (9, '9 класс'), (10, '10 класс')], verbose_name='В какой класс поступает')),
                ('there_is_application', models.BooleanField(default=False, verbose_name='Заявление (да/нет)')),
                ('there_is_birth_certificate', models.BooleanField(default=False, verbose_name='Свидетельство о рождении (да/нет)')),
                ('there_is_mark_sheet', models.BooleanField(default=False, verbose_name='Ведомость годовых отметок (да/нет)')),
                ('there_is_characteristic', models.BooleanField(default=False, verbose_name='Характеристика (да/нет)')),
                ('there_is_certificate_of_education', models.BooleanField(default=False, verbose_name='Свидетельство об общем базовом образовании (да/нет)')),
                ('there_is_conclusion', models.BooleanField(verbose_name='Заключение об изучении кандидата (да/нет)')),
                ('there_is_medical_certificate', models.BooleanField(default=False, verbose_name='Медицинская справка (да/нет)')),
                ('there_is_card_extract', models.BooleanField(default=False, verbose_name='Выписка из медицинской карты за последние 5 лет  (да/нет)')),
                ('there_is_psychological_information', models.BooleanField(default=False, verbose_name='Медицинская справка о состоянии здоровья, подтверждающая отсутствие учета')),
                ('rus_mark', models.IntegerField(blank=True, null=True, verbose_name='Отметка по Русский язык')),
                ('bel_mark', models.IntegerField(blank=True, null=True, verbose_name='Отметка по Белорусский язык')),
                ('math_mark', models.IntegerField(blank=True, null=True, verbose_name='Отметка по Математика')),
                ('sum_mark', models.IntegerField(blank=True, null=True, verbose_name='Сумма баллов по результатам вступительных испытаний')),
                ('fit_diagnosis', models.TextField(blank=True, null=True, verbose_name='Диагноз (если не годен)')),
                ('extra_data', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата и время последнего редактирования записи')),
                ('address_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='applicant.addresscity', verbose_name='Адрес (город)')),
                ('complete_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applicant.completefrom', verbose_name='Комплектующий орган')),
                ('language_for_study', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='applicant.foreignlanguage', verbose_name='Иностранный язык в случае поступления')),
                ('language_math', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='language_math', to='applicant.languagemath', verbose_name='Язык задания по математике')),
                ('privilege', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='applicant.privilege', verbose_name='Документы, подтверждающие право на льготы')),
                ('language_for_dictation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='applicant.subject', verbose_name='Выбор учебного предмета для написания диктанта')),
                ('fit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='applicant.vvk', verbose_name='Прохождение ВВК')),
            ],
            options={
                'verbose_name': 'Личное дело',
                'verbose_name_plural': 'Личные дела',
                'ordering': ('-created_at',),
            },
        ),
    ]
