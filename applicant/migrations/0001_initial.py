# Generated by Django 5.0.3 on 2024-04-02 10:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CompleteFrom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complete_from', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Комплектующий орган',
                'verbose_name_plural': 'Комплектующие органы',
                'ordering': ('complete_from',),
            },
        ),
        migrations.CreateModel(
            name='ForeignLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foreign_language', models.CharField(max_length=100, verbose_name='Предмет')),
            ],
            options={
                'verbose_name': 'Иностранный язык для изучения',
                'verbose_name_plural': 'Иностранные языки для изучения',
                'ordering': ('foreign_language',),
            },
        ),
        migrations.CreateModel(
            name='LanguageMath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=100, verbose_name='Язык для математики')),
            ],
            options={
                'verbose_name': 'Язык',
                'verbose_name_plural': 'Языки',
                'ordering': ('language',),
            },
        ),
        migrations.CreateModel(
            name='Privilege',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privilege', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Льгота',
                'verbose_name_plural': 'Льготы',
                'ordering': ('privilege',),
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100, verbose_name='Предмет')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
                'ordering': ('subject',),
            },
        ),
        migrations.CreateModel(
            name='ApplicantPersonalFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_number', models.CharField(max_length=100, verbose_name='Регистрационный номер')),
                ('last_name', models.CharField(max_length=200, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=200, verbose_name='Имя')),
                ('patronymic', models.CharField(max_length=200, verbose_name='Отчество')),
                ('date_of_birth', models.DateField(verbose_name='Дата рождения')),
                ('address', models.TextField(verbose_name='Домашний адрес (Область, Город, Улица, Номер дома)')),
                ('contact_number', models.TextField(verbose_name='Контактные данные законных представителей')),
                ('average_mark', models.FloatField(verbose_name='Средний бал свидетельства об общем базовом образовании')),
                ('class_he_goes_to', models.IntegerField(verbose_name='В какой класс поступает')),
                ('there_is_application', models.BooleanField(default=False, verbose_name='Заявление (да/нет)')),
                ('there_is_birth_certificate', models.BooleanField(default=False, verbose_name='Свидетельство о рождении (да/нет)')),
                ('there_is_mark_sheet', models.BooleanField(default=False, verbose_name='Ведомость годовых отметок (да/нет)')),
                ('there_is_characteristic', models.BooleanField(default=False, verbose_name='Характеристика (да/нет)')),
                ('there_is_certificate_of_education', models.BooleanField(default=False, verbose_name='Свидетельство об общем базовом образовании (да/нет)')),
                ('there_is_conclusion', models.BooleanField(verbose_name='Заключение об изучении кандидата (да/нет)')),
                ('there_is_medical_certificate', models.BooleanField(default=False, verbose_name='Медицинская справка (да/нет)')),
                ('there_is_card_extract', models.BooleanField(default=False, verbose_name='Выписка из медицинской карты за последние 5 лет  (да/нет)')),
                ('there_is_psychological_information', models.BooleanField(default=False, verbose_name='Медицинская справка о состоянии здоровья, подтверждающая отсутствие учета')),
                ('rus_mark', models.IntegerField(blank=True, null=True, verbose_name='Отметка по Русский язык')),
                ('bel_mark', models.IntegerField(blank=True, null=True, verbose_name='Отметка по Белорусский язык')),
                ('math_mark', models.IntegerField(blank=True, null=True, verbose_name='Отметка по Математика')),
                ('is_fit', models.BooleanField(default=False, verbose_name='Годен')),
                ('extra_data', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата и время последнего редактирования записи')),
                ('complete_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applicant.completefrom', verbose_name='Комплектующий орган')),
                ('language_for_study', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='applicant.foreignlanguage', verbose_name='Иностранный язык в случае поступления')),
                ('language_math', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='language_math', to='applicant.languagemath', verbose_name='Язык задания по математике')),
                ('privilege', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='applicant.privilege', verbose_name='Документы, подтверждающие право на льготы')),
                ('language_for_dictation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='applicant.subject', verbose_name='Выбор учебного предмета для написания диктанта')),
            ],
            options={
                'verbose_name': '',
                'ordering': ('last_name',),
            },
        ),
    ]
